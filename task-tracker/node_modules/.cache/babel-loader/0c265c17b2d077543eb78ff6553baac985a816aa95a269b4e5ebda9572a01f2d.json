{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhuru\\\\Music\\\\task-tracker\\\\src\\\\Task.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Task({\n  task,\n  updateTask,\n  deleteTask,\n  toggleComplete\n}) {\n  _s();\n  const [isEditing, setIsEditing] = useState(false);\n  const [newText, setNewText] = useState(task.text);\n  const handleUpdate = () => {\n    updateTask(task.id, newText);\n    setIsEditing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: `task ${task.isComplete ? 'completed' : ''}`,\n    children: isEditing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newText,\n        onChange: e => setNewText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdate,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => toggleComplete(task.id),\n        children: [task.text, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"priority\",\n          children: task.priority\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"due-date\",\n        children: task.dueDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsEditing(true),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteTask(task.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_s(Task, \"8EQymbNOmczUnBxqsMO5Q5ZX/ww=\");\n_c = Task;\nexport default Task;\nvar _c;\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Task","task","updateTask","deleteTask","toggleComplete","_s","isEditing","setIsEditing","newText","setNewText","text","handleUpdate","id","className","isComplete","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","priority","dueDate","_c","$RefreshReg$"],"sources":["C:/Users/bhuru/Music/task-tracker/src/Task.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Task({ task, updateTask, deleteTask, toggleComplete }) {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [newText, setNewText] = useState(task.text);\r\n\r\n  const handleUpdate = () => {\r\n    updateTask(task.id, newText);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <li className={`task ${task.isComplete ? 'completed' : ''}`}>\r\n      {isEditing ? (\r\n        <>\r\n          <input \r\n            type=\"text\" \r\n            value={newText} \r\n            onChange={(e) => setNewText(e.target.value)} \r\n          />\r\n          <button onClick={handleUpdate}>Update</button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <span onClick={() => toggleComplete(task.id)}>\r\n            {task.text} <span className=\"priority\">{task.priority}</span>\r\n          </span>\r\n          <span className=\"due-date\">{task.dueDate}</span>\r\n          <button onClick={() => setIsEditing(true)}>Edit</button>\r\n          <button onClick={() => deleteTask(task.id)}>Delete</button>\r\n        </>\r\n      )}\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Task;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExC,SAASC,IAAIA,CAAC;EAAEC,IAAI;EAAEC,UAAU;EAAEC,UAAU;EAAEC;AAAe,CAAC,EAAE;EAAAC,EAAA;EAC9D,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAACM,IAAI,CAACS,IAAI,CAAC;EAEjD,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzBT,UAAU,CAACD,IAAI,CAACW,EAAE,EAAEJ,OAAO,CAAC;IAC5BD,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,oBACEV,OAAA;IAAIgB,SAAS,EAAE,QAAQZ,IAAI,CAACa,UAAU,GAAG,WAAW,GAAG,EAAE,EAAG;IAAAC,QAAA,EACzDT,SAAS,gBACRT,OAAA,CAAAE,SAAA;MAAAgB,QAAA,gBACElB,OAAA;QACEmB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAET,OAAQ;QACfU,QAAQ,EAAGC,CAAC,IAAKV,UAAU,CAACU,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,eACF3B,OAAA;QAAQ4B,OAAO,EAAEd,YAAa;QAAAI,QAAA,EAAC;MAAM;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eAC9C,CAAC,gBAEH3B,OAAA,CAAAE,SAAA;MAAAgB,QAAA,gBACElB,OAAA;QAAM4B,OAAO,EAAEA,CAAA,KAAMrB,cAAc,CAACH,IAAI,CAACW,EAAE,CAAE;QAAAG,QAAA,GAC1Cd,IAAI,CAACS,IAAI,EAAC,GAAC,eAAAb,OAAA;UAAMgB,SAAS,EAAC,UAAU;UAAAE,QAAA,EAAEd,IAAI,CAACyB;QAAQ;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzD,CAAC,eACP3B,OAAA;QAAMgB,SAAS,EAAC,UAAU;QAAAE,QAAA,EAAEd,IAAI,CAAC0B;MAAO;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAChD3B,OAAA;QAAQ4B,OAAO,EAAEA,CAAA,KAAMlB,YAAY,CAAC,IAAI,CAAE;QAAAQ,QAAA,EAAC;MAAI;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACxD3B,OAAA;QAAQ4B,OAAO,EAAEA,CAAA,KAAMtB,UAAU,CAACF,IAAI,CAACW,EAAE,CAAE;QAAAG,QAAA,EAAC;MAAM;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eAC3D;EACH;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAET;AAACnB,EAAA,CAhCQL,IAAI;AAAA4B,EAAA,GAAJ5B,IAAI;AAkCb,eAAeA,IAAI;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}