{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhuru\\\\Music\\\\task-tracker\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TaskForm from './TaskForm.jsx';\nimport TaskList from './TaskList.jsx';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [filter, setFilter] = useState('all');\n  const addTask = (text, priority, dueDate) => {\n    const newTask = {\n      id: Date.now(),\n      text,\n      isComplete: false,\n      priority,\n      dueDate\n    };\n    setTasks([...tasks, newTask]);\n  };\n  const updateTask = (id, updatedText) => {\n    setTasks(tasks.map(task => task.id === id ? {\n      ...task,\n      text: updatedText\n    } : task));\n  };\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n  const toggleComplete = id => {\n    setTasks(tasks.map(task => task.id === id ? {\n      ...task,\n      isComplete: !task.isComplete\n    } : task));\n  };\n  const clearCompletedTasks = () => {\n    setTasks(tasks.filter(task => !task.isComplete));\n  };\n  const filteredTasks = tasks.filter(task => {\n    if (filter === 'all') return true;\n    if (filter === 'completed') return task.isComplete;\n    if (filter === 'incomplete') return !task.isComplete;\n    if (filter === 'high-priority') return task.priority === 'High';\n    return true;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-tracker\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskForm, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFilter('all'),\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFilter('completed'),\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFilter('incomplete'),\n        children: \"Incomplete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFilter('high-priority'),\n        children: \"High Priority\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearCompletedTasks,\n        children: \"Clear Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: filteredTasks,\n      updateTask: updateTask,\n      deleteTask: deleteTask,\n      toggleComplete: toggleComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"QPzHS6yxgTMd+mLLtAh4oSYXmow=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","TaskForm","TaskList","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","filter","setFilter","addTask","text","priority","dueDate","newTask","id","Date","now","isComplete","updateTask","updatedText","map","task","deleteTask","toggleComplete","clearCompletedTasks","filteredTasks","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/bhuru/Music/task-tracker/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport TaskForm from './TaskForm.jsx';\nimport TaskList from './TaskList.jsx';\nimport './App.css';\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [filter, setFilter] = useState('all');\n\n  const addTask = (text, priority, dueDate) => {\n    const newTask = { id: Date.now(), text, isComplete: false, priority, dueDate };\n    setTasks([...tasks, newTask]);\n  };\n\n  const updateTask = (id, updatedText) => {\n    setTasks(tasks.map(task => task.id === id ? { ...task, text: updatedText } : task));\n  };\n\n  const deleteTask = (id) => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n\n  const toggleComplete = (id) => {\n    setTasks(tasks.map(task => task.id === id ? { ...task, isComplete: !task.isComplete } : task));\n  };\n\n  const clearCompletedTasks = () => {\n    setTasks(tasks.filter(task => !task.isComplete));\n  };\n\n  const filteredTasks = tasks.filter(task => {\n    if (filter === 'all') return true;\n    if (filter === 'completed') return task.isComplete;\n    if (filter === 'incomplete') return !task.isComplete;\n    if (filter === 'high-priority') return task.priority === 'High';\n    return true;\n  });\n\n  return (\n    <div className=\"task-tracker\">\n      <h1>Task Tracker</h1>\n      <TaskForm addTask={addTask} />\n      <div className=\"filter-buttons\">\n        <button onClick={() => setFilter('all')}>All</button>\n        <button onClick={() => setFilter('completed')}>Completed</button>\n        <button onClick={() => setFilter('incomplete')}>Incomplete</button>\n        <button onClick={() => setFilter('high-priority')}>High Priority</button>\n        <button onClick={clearCompletedTasks}>Clear Completed</button>\n      </div>\n      <TaskList \n        tasks={filteredTasks} \n        updateTask={updateTask} \n        deleteTask={deleteTask} \n        toggleComplete={toggleComplete} \n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}